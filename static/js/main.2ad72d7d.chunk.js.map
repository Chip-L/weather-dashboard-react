{"version":3,"sources":["config/MyConfig.js","utils/helpers.js","store/actions.js","store/dataReducer.js","store/GlobalState.js","components/Forecast/Forecast.js","components/CurrentWeather/CurrentWeather.js","components/Header/Header.js","components/Search/Search.js","App.js","index.js"],"names":["OPEN_WEATHER_API_KEY","degreeSymbol","String","fromCharCode","formatDate","date","newDate","Date","getMonth","getDate","getFullYear","GET_SEARCH_CITY","SET_CITY","SET_WEATHER","SET_IS_LOADING","SET_ERROR","getSearchCity","city","type","setIsLoading","setIsError","err","payload","reducer","state","action","searchCity","isLoading","isError","weather","isSet","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","name","latitude","longitude","icon","src","alt","curTemp","curWindSpd","curHumidity","curUvi","fiveDayForecast","cityList","useReducer","dispatch","useStoreContext","useContext","Forecast","forecast","styles","card","background","color","fontSize","fontWeight","lineHeight","padding","border","borderRadius","img","verticalAlign","style","dt","description","temp","max","min","wind_speed","humidity","CurrentWeather","div","display","gap","marginBottom","fdfHeading","margin","fdfDiv","fdfRow","justifyContent","useState","uviStyle","setUVIStyle","useEffect","url","controller","AbortController","fetch","signal","then","response","ok","message","status","Error","json","data","console","log","objWeather","current","uvi","asOfDate","daily","slice","setWeather","backgroundColor","getUVIStyle","catch","map","header","maxWidth","h1","Search","container","borderBottom","form","gridGap","label","input","button","transition","cityInput","setCityInput","objCity","coord","lat","lon","className","onSubmit","e","preventDefault","placeholder","onChange","target","content","gridTemplateColumns","aside","gridColumn","section","App","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ad72d7d.chunk.js","sourcesContent":["export const OPEN_WEATHER_API_KEY = \"feff70f8d612132ecb7ca03754f46b78\";\r\n","export const degreeSymbol = String.fromCharCode(176);\r\n\r\nexport function formatTime(date) {\r\n  return date.toLocaleTimeString();\r\n}\r\n\r\n// The custom helper 'formatDate' takes in a timestamp\r\nexport function formatDate(date) {\r\n  // for some reason the date comes in in seconds, not milliseconds...\r\n  const newDate = new Date(date * 1000);\r\n  return `${\r\n    newDate.getMonth() + 1\r\n  }/${newDate.getDate()}/${newDate.getFullYear()}`;\r\n}\r\n\r\nexport function getUVIStyle(curUvi) {\r\n  const uviStyle = {\r\n    borderRadius: \".25rem\",\r\n    padding: \".25rem .5rem\",\r\n    fontSize: \"1.25rem\",\r\n  };\r\n\r\n  console.log(curUvi);\r\n\r\n  if (curUvi <= 2) {\r\n    uviStyle.backgroundColor = \"green\";\r\n    uviStyle.color = \"azure\";\r\n  } else if (curUvi <= 5) {\r\n    uviStyle.backgroundColor = \"yellow\";\r\n  } else if (curUvi <= 7) {\r\n    uviStyle.backgroundColor = \"orange\";\r\n  } else if (curUvi <= 10) {\r\n    uviStyle.backgroundColor = \"red\";\r\n    uviStyle.color = \"azure\";\r\n  } else {\r\n    uviStyle.backgroundColor = \"violet\";\r\n    uviStyle.color = \"azure\";\r\n  }\r\n  return uviStyle;\r\n}\r\n","/** used in the search component to initially find the city */\r\nexport const GET_SEARCH_CITY = \"SET_SEARCH_CITY\";\r\n\r\n/** used in the CityList component to search a stored city */\r\nexport const SET_CITY = \"SET_CITY\";\r\n\r\n/** used to update the state of the weather (loading, data, errors) */\r\nexport const SET_WEATHER = \"SET_WEATHER\";\r\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\n// The idea for action creators came from: https://dev.to/markusclaus/fetching-data-from-an-api-using-reactredux-55ao\r\n\r\nexport const getSearchCity = (city) => {\r\n  return {\r\n    type: GET_SEARCH_CITY,\r\n    city: city,\r\n  };\r\n};\r\n\r\nexport const setCity = (city) => {\r\n  return {\r\n    type: SET_CITY,\r\n    payload: city,\r\n  };\r\n};\r\n\r\nexport const setIsLoading = () => {\r\n  return {\r\n    type: SET_IS_LOADING,\r\n  };\r\n};\r\n\r\nexport const setWeather = (weather) => {\r\n  return {\r\n    type: SET_WEATHER,\r\n    payload: weather,\r\n  };\r\n};\r\n\r\nexport const setIsError = (err) => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  GET_SEARCH_CITY,\r\n  SET_CITY,\r\n  SET_WEATHER,\r\n  SET_IS_LOADING,\r\n  SET_ERROR,\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_SEARCH_CITY:\r\n      return {\r\n        ...state,\r\n        searchCity: action.city,\r\n      };\r\n    case SET_CITY:\r\n      // console.log(\"userReducer: SET_SEARCH_CITY:\", action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        city: action.payload,\r\n      };\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: null,\r\n        weather: { isSet: false },\r\n      };\r\n    case SET_WEATHER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: null,\r\n        weather: action.payload,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: action.payload,\r\n        weather: { isSet: false },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useDataReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport { useDataReducer } from \"./dataReducer\";\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useDataReducer({\r\n    city: {\r\n      name: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n    },\r\n\r\n    searchCity: \"\",\r\n\r\n    isLoading: false,\r\n    isError: null,\r\n\r\n    weather: {\r\n      isSet: false,\r\n      icon: {\r\n        src: \"\",\r\n        alt: \"\",\r\n      },\r\n      curTemp: null,\r\n      curWindSpd: null,\r\n      curHumidity: null,\r\n      curUvi: null,\r\n      fiveDayForecast: [],\r\n    },\r\n\r\n    cityList: [],\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import React from \"react\";\r\nimport { degreeSymbol, formatDate } from \"../../utils/helpers\";\r\n\r\nfunction Forecast({ forecast }) {\r\n  const styles = {\r\n    card: {\r\n      background: \"#2d3e50\",\r\n      color: \"azure\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: \"bold\",\r\n      lineHeight: 1.5,\r\n      padding: \".5rem\",\r\n      // display: \"flex\",\r\n      // flexDirection: \"column\",\r\n      border: \"1px solid rgba(0,0,0,.125)\",\r\n      borderRadius: \".25rem\",\r\n    },\r\n    img: {\r\n      verticalAlign: \"middle\",\r\n    },\r\n  };\r\n  return (\r\n    <div style={styles.card}>\r\n      <p>{formatDate(forecast.dt)}</p>\r\n      <img\r\n        src={`https://openweathermap.org/img/wn/${forecast.weather[0].icon}.png`}\r\n        alt={forecast.weather[0].description}\r\n        style={styles.img}\r\n      />\r\n      <p>High: {forecast.temp.max + degreeSymbol} F</p>\r\n      <p>Low: {forecast.temp.min + degreeSymbol} F</p>\r\n      <p>Wind: {forecast.wind_speed} MPH</p>\r\n      <p>Humidity: {forecast.humidity}%</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Forecast;\r\n","import { useEffect, useState } from \"react\";\r\nimport { OPEN_WEATHER_API_KEY } from \"../../config/MyConfig\";\r\n\r\nimport { formatDate, getUVIStyle, degreeSymbol } from \"../../utils/helpers\";\r\n\r\nimport { useStoreContext } from \"../../store/GlobalState\";\r\nimport { setIsError, setIsLoading, setWeather } from \"../../store/actions\";\r\nimport Forecast from \"../Forecast/Forecast\";\r\n\r\nfunction CurrentWeather() {\r\n  const styles = {\r\n    div: {\r\n      display: \"grid\",\r\n      gap: \"1rem\",\r\n      padding: \"1rem\",\r\n\r\n      border: \"1px solid black\",\r\n      fontSize: \"1.5rem\",\r\n    },\r\n    city: {\r\n      fontSize: \"2rem\",\r\n      fontWeight: 700,\r\n      marginBottom: \".5rem\",\r\n    },\r\n    img: {\r\n      verticalAlign: \"middle\",\r\n    },\r\n    fdfHeading: {\r\n      fontSize: \"1.75rem\",\r\n      fontWeight: 700,\r\n      margin: \".5rem\",\r\n    },\r\n    fdfDiv: {\r\n      display: \"grid\",\r\n      gap: \"1rem\",\r\n      padding: \"1rem\",\r\n    },\r\n    fdfRow: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      padding: \"0 1rem\",\r\n    },\r\n  };\r\n\r\n  const [{ city, isLoading, isError, weather }, dispatch] = useStoreContext();\r\n\r\n  const [uviStyle, setUVIStyle] = useState({});\r\n\r\n  useEffect(() => {\r\n    // check if this can even run\r\n    if (city.name === \"\") return;\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/onecall?lat=${city.latitude}&lon=${city.longitude}&exclude=minutely,hourly&units=imperial&appid=${OPEN_WEATHER_API_KEY}`;\r\n\r\n    // this should control if the search is terminated before the results are back - I don't think I'm using it correct though\r\n    // TODO: fix abort controller\r\n    const controller = new AbortController();\r\n\r\n    dispatch(setIsLoading());\r\n\r\n    // get the data\r\n    fetch(url, { signal: controller.signal })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          const message = `An error has occurred: ${response.status}`;\r\n          throw new Error(message);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        console.log(data);\r\n\r\n        const objWeather = {\r\n          isSet: true,\r\n          icon: {\r\n            src: `https://openweathermap.org/img/wn/${data.current.weather[0].icon}.png`,\r\n            alt: data.current.weather[0].description,\r\n          },\r\n          curTemp: data.current.temp,\r\n          curWindSpd: data.current.wind_speed,\r\n          curHumidity: data.current.humidity,\r\n          curUvi: data.current.uvi,\r\n          asOfDate: formatDate(data.current.dt),\r\n          fiveDayForecast: data.daily.slice(1, 6), // 0 is today's forecast\r\n        };\r\n\r\n        dispatch(setWeather(objWeather));\r\n        setUVIStyle(getUVIStyle(objWeather.curUvi));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setIsError(err));\r\n      });\r\n  }, [city]);\r\n\r\n  return (\r\n    <>\r\n      {isLoading && <div>Loading...</div>}\r\n      {isError && <div>{isError.message}</div>}\r\n\r\n      {weather.isSet && (\r\n        <>\r\n          <div style={styles.div}>\r\n            <p style={styles.city}>\r\n              {city.name} ({weather.asOfDate}){\" \"}\r\n              <img\r\n                style={styles.img}\r\n                src={weather.icon.src}\r\n                alt={weather.icon.alt}\r\n              />\r\n            </p>\r\n            <p>Temp: {weather.curTemp + degreeSymbol} F</p>\r\n            <p>Wind: {weather.curWindSpd} MPH</p>\r\n            <p>Humidity: {weather.curHumidity}%</p>\r\n            <p>\r\n              UV Index: <span style={uviStyle}>{weather.curUvi}</span>\r\n            </p>\r\n          </div>\r\n          <div style={styles.fdfDiv}>\r\n            <p style={styles.fdfHeading}>5 day forecast</p>\r\n            <div style={styles.fdfRow}>\r\n              {weather.fiveDayForecast.map((forecast) => (\r\n                <Forecast forecast={forecast} key={forecast.dt} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CurrentWeather;\r\n","import React from \"react\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n\r\n    padding: \".5rem .75rem\",\r\n    background: \"linear-gradient(to right, blue, navy)\",\r\n    color: \"azure\",\r\n\r\n    maxWidth: \"100%\",\r\n  },\r\n  h1: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: 500,\r\n    marginBottom: \".5rem\",\r\n  },\r\n};\r\n\r\nfunction header() {\r\n  return (\r\n    <header style={styles.header}>\r\n      <h1 style={styles.h1}>Weather Dashboard</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { OPEN_WEATHER_API_KEY } from \"../../config/MyConfig\";\r\n\r\nimport { useStoreContext } from \"../../store/GlobalState\";\r\nimport {\r\n  getSearchCity,\r\n  setCity,\r\n  setIsError,\r\n  setIsLoading,\r\n} from \"../../store/actions\";\r\n\r\nfunction Search() {\r\n  const styles = {\r\n    container: {\r\n      margin: \".5rem\",\r\n      borderBottom: \"2px solid black\",\r\n    },\r\n    form: {\r\n      display: \"grid\",\r\n      gridGap: \".5rem\",\r\n    },\r\n    label: {\r\n      fontSize: \"1.75rem\",\r\n      fontWeight: 700,\r\n      marginBottom: \".5rem\",\r\n    },\r\n    input: {\r\n      display: \"block\",\r\n      // marginTop: \"1rem\",\r\n      padding: \".375rem .75rem\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400,\r\n      lineHeight: 1.5,\r\n      border: \"1px solid #ced4da\",\r\n      borderRadius: \".25rem\",\r\n    },\r\n    button: {\r\n      background: \"#5098e6\",\r\n      color: \"#c7dfe8\",\r\n      marginBottom: \"1rem\",\r\n      padding: \".375rem .75rem\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400,\r\n      lineHeight: \"1.5rem\",\r\n      border: \"1px solid transparent\",\r\n      borderRadius: \".25rem\",\r\n      transition:\r\n        \"color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out\",\r\n    },\r\n  };\r\n\r\n  const [{ searchCity }, dispatch] = useStoreContext();\r\n\r\n  const [cityInput, setCityInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cityInput) {\r\n      dispatch(getSearchCity(cityInput));\r\n    }\r\n    setCityInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if no search city - skip this\r\n    if (!searchCity) return;\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${searchCity}&units=imperial&appid=${OPEN_WEATHER_API_KEY}`;\r\n\r\n    // this should control if the search is terminated before the results are back - I don't think I'm using it correct though\r\n    // TODO: fix abort controller\r\n    const controller = new AbortController();\r\n\r\n    // set loading to true (these will be reset in the other dispatches)\r\n    dispatch(setIsLoading());\r\n\r\n    // get the data\r\n    fetch(url, { signal: controller.signal })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          let message = \"\";\r\n          if (response.status === 404) {\r\n            message = `Unable to find ${searchCity}`;\r\n          } else {\r\n            message = `An error has occurred: ${response.status}`;\r\n          }\r\n          throw new Error(message);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const objCity = {\r\n          name: data.name,\r\n          latitude: data.coord.lat,\r\n          longitude: data.coord.lon,\r\n        };\r\n\r\n        dispatch(setCity(objCity));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setIsError(err));\r\n      });\r\n    // reset search city to \"\" so we don't keep trying to execute this block\r\n    dispatch(getSearchCity(\"\"));\r\n  }, [searchCity]);\r\n\r\n  return (\r\n    <section className=\"search\" style={styles.container}>\r\n      <form style={styles.form} onSubmit={handleSubmit}>\r\n        <label style={styles.label}>Search for a City:</label>\r\n        <input\r\n          placeholder=\"City (no state)\"\r\n          type=\"text\"\r\n          style={styles.input}\r\n          value={cityInput}\r\n          onChange={(e) => {\r\n            setCityInput(e.target.value);\r\n          }}\r\n        />\r\n        <button type=\"submit\" style={styles.button}>\r\n          Search\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import CurrentWeather from \"./components/CurrentWeather/CurrentWeather\";\nimport Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport { StoreProvider } from \"./store/GlobalState\";\n\nconst styles = {\n  content: {\n    maxWidth: \"1320px\",\n    margin: \"auto\",\n    padding: \"1rem\",\n\n    display: \"grid\",\n    gridTemplateColumns: \"auto auto auto auto auto auto\",\n    gridGap: \"1rem\",\n  },\n  aside: {\n    gridColumn: 1,\n  },\n  section: {\n    gridColumn: \"2 / span 5\",\n    // border: \"1px solid black\",\n  },\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <StoreProvider>\n        <div className=\"content\" style={styles.content}>\n          <aside style={styles.aside}>\n            <Search />\n          </aside>\n          <section style={styles.section}>\n            <CurrentWeather />\n          </section>\n        </div>\n      </StoreProvider>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}
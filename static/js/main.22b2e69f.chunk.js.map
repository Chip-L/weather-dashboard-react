{"version":3,"sources":["components/Header/Header.js","store/actions.js","store/dataReducer.js","store/GlobalState.js","components/Search/Search.js","config/MyConfig.js","App.js","index.js"],"names":["styles","header","display","justifyContent","padding","background","color","maxWidth","h1","fontSize","fontWeight","marginBottom","style","GET_SEARCH_CITY","SET_CITY","SET_WEATHER","SET_IS_LOADING","SET_ERROR","getSearchCity","city","type","reducer","state","action","searchCity","isLoading","payload","weather","isError","StoreContext","createContext","Provider","StoreProvider","value","initialState","props","name","latitude","longitude","icon","src","alt","curTemp","curWindSpd","curHumidity","curUvi","fiveDayForecast","cityList","useReducer","dispatch","Search","container","margin","borderBottom","form","gridGap","label","input","lineHeight","border","borderRadius","button","transition","useContext","useState","cityInput","setCityInput","useEffect","url","controller","AbortController","fetch","signal","then","response","ok","message","status","Error","json","data","objCity","coord","lat","lon","catch","err","setIsError","className","onSubmit","e","preventDefault","placeholder","onChange","target","content","App","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22b2e69f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst styles = {\r\n  header: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n\r\n    padding: \".5rem .75rem\",\r\n    background: \"linear-gradient(to right, blue, navy)\",\r\n    color: \"azure\",\r\n\r\n    maxWidth: \"100%\",\r\n  },\r\n  h1: {\r\n    fontSize: \"2.5rem\",\r\n    fontWeight: 500,\r\n    marginBottom: \".5rem\",\r\n  },\r\n};\r\n\r\nfunction header() {\r\n  return (\r\n    <header style={styles.header}>\r\n      <h1 style={styles.h1}>Weather Dashboard</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default header;\r\n","/** used in the search component to initially find the city */\r\nexport const GET_SEARCH_CITY = \"SET_SEARCH_CITY\";\r\n\r\n/** used in the CityList component to search a stored city */\r\nexport const SET_CITY = \"SET_CITY\";\r\n\r\n/** used to update the state of the weather (loading, data, errors) */\r\nexport const SET_WEATHER = \"SET_WEATHER\";\r\nexport const SET_IS_LOADING = \"SET_IS_LOADING\";\r\nexport const SET_ERROR = \"SET_ERROR\";\r\n\r\n// The idea for action creators came from: https://dev.to/markusclaus/fetching-data-from-an-api-using-reactredux-55ao\r\n\r\nexport const getSearchCity = (city) => {\r\n  return {\r\n    type: GET_SEARCH_CITY,\r\n    city: city,\r\n  };\r\n};\r\n\r\nexport const setCity = (city) => {\r\n  return {\r\n    type: SET_CITY,\r\n    payload: city,\r\n  };\r\n};\r\n\r\nexport const setIsLoading = () => {\r\n  return {\r\n    type: SET_IS_LOADING,\r\n  };\r\n};\r\n\r\nexport const setWeather = (weather) => {\r\n  return {\r\n    type: SET_WEATHER,\r\n    payload: weather,\r\n  };\r\n};\r\n\r\nexport const setIsError = (err) => {\r\n  return {\r\n    type: SET_ERROR,\r\n    payload: err,\r\n  };\r\n};\r\n","import { useReducer } from \"react\";\r\nimport {\r\n  GET_SEARCH_CITY,\r\n  SET_CITY,\r\n  SET_WEATHER,\r\n  SET_IS_LOADING,\r\n  SET_ERROR,\r\n} from \"./actions\";\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case GET_SEARCH_CITY:\r\n      return {\r\n        ...state,\r\n        searchCity: action.city,\r\n      };\r\n    case SET_CITY:\r\n      // console.log(\"userReducer: SET_SEARCH_CITY:\", action.payload);\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        city: action.payload,\r\n      };\r\n    case SET_IS_LOADING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case SET_WEATHER:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        weather: action.payload,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function useDataReducer(initialState) {\r\n  return useReducer(reducer, initialState);\r\n}\r\n","import { createContext, useContext } from \"react\";\r\nimport { useDataReducer } from \"./dataReducer\";\r\n\r\nconst StoreContext = createContext();\r\nconst { Provider } = StoreContext;\r\n\r\nconst StoreProvider = ({ value = [], ...props }) => {\r\n  const [state, dispatch] = useDataReducer({\r\n    city: {\r\n      name: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n    },\r\n\r\n    searchCity: \"\",\r\n\r\n    isLoading: false,\r\n    isError: null,\r\n\r\n    weather: {\r\n      icon: {\r\n        src: \"\",\r\n        alt: \"\",\r\n      },\r\n      curTemp: null,\r\n      curWindSpd: null,\r\n      curHumidity: null,\r\n      curUvi: null,\r\n      fiveDayForecast: [],\r\n    },\r\n\r\n    cityList: [],\r\n  });\r\n\r\n  return <Provider value={[state, dispatch]} {...props} />;\r\n};\r\n\r\nconst useStoreContext = () => {\r\n  return useContext(StoreContext);\r\n};\r\n\r\nexport { StoreProvider, useStoreContext };\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { OPEN_WEATHER_API_KEY } from \"../../config/MyConfig\";\r\n\r\nimport { useStoreContext } from \"../../store/GlobalState\";\r\nimport {\r\n  getSearchCity,\r\n  setCity,\r\n  setIsError,\r\n  setIsLoading,\r\n} from \"../../store/actions\";\r\n\r\nfunction Search() {\r\n  const styles = {\r\n    container: {\r\n      margin: \".5rem\",\r\n      borderBottom: \"2px solid black\",\r\n    },\r\n    form: {\r\n      display: \"grid\",\r\n      gridGap: \".5rem\",\r\n    },\r\n    label: {\r\n      fontSize: \"1.75rem\",\r\n      fontWeight: 700,\r\n      marginBottom: \".5rem\",\r\n    },\r\n    input: {\r\n      display: \"block\",\r\n      // marginTop: \"1rem\",\r\n      padding: \".375rem .75rem\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400,\r\n      lineHeight: 1.5,\r\n      border: \"1px solid #ced4da\",\r\n      borderRadius: \".25rem\",\r\n    },\r\n    button: {\r\n      background: \"#5098e6\",\r\n      color: \"#c7dfe8\",\r\n      marginBottom: \"1rem\",\r\n      padding: \".375rem .75rem\",\r\n      fontSize: \"1rem\",\r\n      fontWeight: 400,\r\n      lineHeight: \"1.5rem\",\r\n      border: \"1px solid transparent\",\r\n      borderRadius: \".25rem\",\r\n      transition:\r\n        \"color .15s ease-in-out,background-color .15s ease-in-out,border-color .15s ease-in-out,box-shadow .15s ease-in-out\",\r\n    },\r\n  };\r\n\r\n  const [{ searchCity }, dispatch] = useStoreContext();\r\n\r\n  const [cityInput, setCityInput] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (cityInput) {\r\n      dispatch(getSearchCity(cityInput));\r\n    }\r\n    setCityInput(\"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    // if no search city - skip this\r\n    if (!searchCity) return;\r\n\r\n    const url = `https://api.openweathermap.org/data/2.5/weather?q=${searchCity}&units=imperial&appid=${OPEN_WEATHER_API_KEY}`;\r\n\r\n    // this should control if the search is terminated before the results are back - I don't think I'm using it correct though\r\n    // TODO: fix abort controller\r\n    const controller = new AbortController();\r\n\r\n    // set loading to true (these will be reset in the other dispatches)\r\n    dispatch(setIsLoading());\r\n\r\n    // get the data\r\n    fetch(url, { signal: controller.signal })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          let message = \"\";\r\n          if (response.status === 404) {\r\n            message = `Unable to find ${searchCity}`;\r\n          } else {\r\n            message = `An error has occurred: ${response.status}`;\r\n          }\r\n          throw new Error(message);\r\n        }\r\n\r\n        return response.json();\r\n      })\r\n      .then((data) => {\r\n        const objCity = {\r\n          name: data.name,\r\n          latitude: data.coord.lat,\r\n          longitude: data.coord.lon,\r\n        };\r\n\r\n        dispatch(setCity(objCity));\r\n      })\r\n      .catch((err) => {\r\n        dispatch(setIsError(err));\r\n      });\r\n    // reset search city to \"\" so we don't keep trying to execute this block\r\n    dispatch(getSearchCity(\"\"));\r\n  }, [searchCity]);\r\n\r\n  return (\r\n    <section className=\"search\" style={styles.container}>\r\n      <form style={styles.form} onSubmit={handleSubmit}>\r\n        <label style={styles.label}>Search for a City:</label>\r\n        <input\r\n          placeholder=\"City (no state)\"\r\n          type=\"text\"\r\n          style={styles.input}\r\n          value={cityInput}\r\n          onChange={(e) => {\r\n            setCityInput(e.target.value);\r\n          }}\r\n        />\r\n        <button type=\"submit\" style={styles.button}>\r\n          Search\r\n        </button>\r\n      </form>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","export const OPEN_WEATHER_API_KEY = \"feff70f8d612132ecb7ca03754f46b78\";\r\n","import Header from \"./components/Header/Header\";\nimport Search from \"./components/Search/Search\";\nimport { StoreProvider } from \"./store/GlobalState\";\n\nconst styles = {\n  content: {\n    maxWidth: \"1400px\",\n    margin: \"auto\",\n    padding: \"1rem\",\n  },\n};\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div className=\"content\" style={styles.content}>\n        <StoreProvider>\n          <aside>\n            <Search />\n          </aside>\n        </StoreProvider>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}